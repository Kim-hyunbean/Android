package com.example.jer25_2;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.ColorMatrix;
import android.graphics.ColorMatrixColorFilter;
import android.graphics.Paint;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;

public class MainActivity extends AppCompatActivity {
    Button BtZoomin, BtZoomout, BtRotate, BtBright, BtDark, BtGray;
    MyGraphicView graphicView;
    static float sCaleX=1, sCaleY=1;
    static float angle = 0;
    static float color = 1;
    static float satur = 1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        setTitle("미니 포토샵");

        LinearLayout pictureLayout = findViewById(R.id.PictureLayout);
        graphicView = new MyGraphicView(this);
        pictureLayout.addView(graphicView);
        clickIcons();


    }

    private void clickIcons() {
        BtZoomin = findViewById(R.id.btZoomin);
        BtZoomin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                sCaleX = sCaleX + 0.2f;
                sCaleY = sCaleY + 0.2f;
                graphicView.invalidate();
            }
        });

        BtZoomout = findViewById(R.id.btZoomout);
        BtZoomout.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                sCaleX = sCaleX - 0.2f;
                sCaleY = sCaleY - 0.2f;
                graphicView.invalidate();
            }
        });

        BtRotate = findViewById(R.id.btRoatate);
        BtRotate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                angle = angle + 20;
                graphicView.invalidate();
            }
        });

        BtBright = findViewById(R.id.btBright);
        BtBright.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                color = color + 0.2f;
                graphicView.invalidate();
            }
        });

        BtDark = findViewById(R.id.btDark);
        BtDark.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                color = color - 0.2f;
                graphicView.invalidate();
            }
        });

        BtGray = findViewById(R.id.btGray);
        BtGray.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (satur == 0){
                    satur = 1;
                }else {
                    satur = 0;
                }
                graphicView.invalidate();
            }
        });
    }


    private static class MyGraphicView extends View {

        public MyGraphicView(Context context) {
            super(context);
        }

        @Override
        protected void onDraw(Canvas canvas) {
            super.onDraw(canvas);

            Bitmap picture = BitmapFactory.decodeResource(getResources(),R.drawable.test1);
            Paint paint = new Paint();
            float[] array = {color, 0,0,0,0,
                    0,color,0,0,0,
                    0,0,color,0,0,
                    0,0,0,1,0}; //RGB

            ColorMatrix cm = new ColorMatrix(array);
            if (satur == 0) {
                cm.setSaturation(satur);
            }
            paint.setColorFilter(new ColorMatrixColorFilter(cm));


            int picx = (this.getWidth()- picture.getWidth())/2;
            int picy = (this.getHeight()-picture.getHeight())/2;

            int cenX = this.getWidth() / 2;
            int cenY = this.getHeight() / 2;
            canvas.scale(sCaleX,sCaleY,cenX,cenY);
            canvas.rotate(angle, cenX, cenY);


            canvas.drawBitmap(picture,picx,picy,paint);

            picture.recycle();
        }
    }


}
