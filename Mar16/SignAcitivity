package com.example.vent.activity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.example.vent.R;
import com.example.vent.api.SignApi;
import com.example.vent.client.RetrofitClient;
import com.example.vent.dto.JoinData;
import com.example.vent.dto.JoinResponse;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;


public class SignActivity extends AppCompatActivity {

    private SignApi signApi = RetrofitClient.getInstance().create(SignApi.class);
    private EditText mEmailView;
    private EditText mPasswordView;
    private EditText mNameView;
    private Button joinbtn;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sign);

        mEmailView = findViewById(R.id.join_email);
        mPasswordView = findViewById(R.id.join_password);
        mNameView = findViewById(R.id.join_name);
        joinbtn = findViewById(R.id.join_button);

        joinbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                attemptJoin();
            }
        });

    }

    private void attemptJoin() {
        mNameView.setError(null);
        mEmailView.setError(null);
        mPasswordView.setError(null);

        String name = mNameView.getText().toString();
        String email = mEmailView.getText().toString();
        String password = mPasswordView.getText().toString();

        boolean cancel = false;
        View focusView = null;

        // 패스워드의 유효성 검사
        if (password.isEmpty()) {
            mEmailView.setError("비밀번호를 입력해주세요.");
            focusView = mEmailView;
            cancel = true;
        } //else if (!isPasswordValid(password)) {
//            mPasswordView.setError("6자 이상의 비밀번호를 입력해주세요.");
//            focusView = mPasswordView;
//            cancel = true;
//        }

        // 이메일의 유효성 검사
        if (email.isEmpty()) {
            mEmailView.setError("이메일을 입력해주세요.");
            focusView = mEmailView;
            cancel = true;
        } //else if (!isEmailValid(email)) {
//            mEmailView.setError("@를 포함한 유효한 이메일을 입력해주세요.");
//            focusView = mEmailView;
//            cancel = true;
//        }

        // 이름의 유효성 검사
        if (name.isEmpty()) {
            mNameView.setError("이름을 입력해주세요.");
            focusView = mNameView;
            cancel = true;
        }

        if (cancel) {
            focusView.requestFocus();
        } else {
            startJoin(new JoinData(email, name, password));
        }
    }

    private void startJoin(JoinData data) {
        signApi.userJoin(data).enqueue(new Callback<JoinResponse>() {
            @Override
            public void onResponse(Call<JoinResponse> call, Response<JoinResponse> response) {
                JoinResponse result = response.body();
                Toast.makeText(SignActivity.this, result.getMessage(), Toast.LENGTH_SHORT).show();

                Intent intent = new Intent(getApplicationContext(), LoginActivity.class);
                startActivity(intent);

                if (result.getCode() == 200) {
                    finish();
                }
            }

            @Override
            public void onFailure(Call<JoinResponse> call, Throwable t) {
                Toast.makeText(SignActivity.this, "에러 발생", Toast.LENGTH_SHORT).show();
                Log.e("회원가입 에러 발생",t.getMessage());
                t.printStackTrace();
            }
        });
    }


}
